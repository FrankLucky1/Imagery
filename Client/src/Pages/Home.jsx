import React,{useEffect, useState} from 'react';
import { Loader, Card, FormField } from '../components';


const RenderCrads = ({data, title}) => {
  if(data?.length > 0){ return data.map((post) => <Card key={post._id} {...post}/>) 
}
return (
  <h2 className='mt-5 font-bold text-[#6449ff] texxt-xl uppercase '>
    {title}
  </h2>
)
}


const Home = () => {

  const [loading, setLoading] = useState(false);
  const [allPost, setAllPost] = useState(null);

  const [searchText, setSearchText] = useState('');
  const [searchResults, setSearchResults] = useState(null);
  const [searchTimeout, setSetSearchTimeout] = useState(null)

  useEffect( () =>{

   const fetchPost= async() => {
    setLoading(true);

    try {
      const respose = await fetch('http://localhost:8080/api/v1/post', {
        method: 'GET',
        headers:{
          'Content-Type': 'application/json',
        }
      })
      if(respose.ok) {
        const result = await respose.json();
        console.log(result)

        setAllPost(result.data.reverse())
      }
    } catch (error) {
      alert(error)
    }finally{
      setLoading(false)
    }
   }
   fetchPost();
  },[])

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout)
    setSearchText(e.target.value);

    setSetSearchTimeout(
    setTimeout(() =>{
      const searchResults =  allPost.filter((item) => item.name.toLowerCase().includes(searchText.toLocaleLowerCase()) || item.prompt.toLocaleLowerCase().includes(searchText.toLocaleLowerCase()));

      setSearchResults(searchResults)
    }, 1000))
  }

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]  '>The Community Showcase</h1>
        <p className='mt-2 text-[#666e75] text-base max-w-[500px]'>Browse through a collection stunning and visually pleasing images generated by AI </p>
      </div>

      <div className='mt-16'>
        <FormField 
          labelName={'Search for a Post'}
          name='text'
          value={searchText}
          type='text'
          handleChange={handleSearchChange}
          />
      </div>

      <div>
        {loading ? (
        <div className='flex justify-center items-center'>
          <Loader/>
        </div>) : (
        <>
          {searchText && (
            <h2 className='font-medium text-[#666e75] text-xl mb-3'>Showing results for <span className='text-[#222328]'>{searchText}</span></h2>
          )}
          <div className='grid lg:grid-col-5 sm:grid-cols-4 xs:grid-cols-3 grid-cols-3 gap-3 mt-4 '>
              {searchText ? (
                <RenderCrads 
                  data={searchResults}
                  title= 'no results found' 
                  />
              ) : (
                <RenderCrads 
                  data={allPost}
                  title= 'Posts not found'
                  />
              )}
          </div>

        </>
        )}
      </div>
    </section>
  )
}

export default Home